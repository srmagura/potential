import numpy as np
from numpy import sin, cos, pi, sqrt
from math import atan2

from solver import cart_to_polar
from ps.ps import PizzaSolver

from .problem import Problem, Pizza

def get_L(R):
    return 2*R + 11/6*pi*R

def eval_bc_extended(R, r, th, sid): 
    L = get_L(R)

    if sid == 0:
        return R / L * (1 + th - pi/6)
    elif sid == 1:
        return 1 - r / L
    elif sid == 2:
        return r / L

class JumpNoCorrection(Pizza, Problem):
    k = 1

    solver_class = PizzaSolver
    homogeneous = True
    expected_known = False

    def eval_f(self, x, y):
        return 0
        
    def eval_bc(self, x, y):
        r, th = cart_to_polar(x, y)
        sid = Pizza.get_sid(th)
        return eval_bc_extended(self.R, r, th, sid)
        
    def eval_bc_extended(self, x, y, sid):
        r, th = cart_to_polar(x, y)
        return eval_bc_extended(self.R, r, th, sid)
        

def eval_u04(k, R, r, th):
    if r == 0:
        print('u04 received r=0')
        return None

    l = 1 / get_L(R)
    phi = th - pi / 6
    k2 = k**2
    r2 = r**2
    
    u04 = 44*k2*r2*pi*sqrt(3) * (k2*r2 - 12) * sin(2*phi)
    u04 += -11*pi*sqrt(3)*sin(4*phi) * k**4*r**4
    u04 += -396*pi*sin(phi)*l*r*(k2*r2 - 8)*sqrt(3)
    u04 += -1584*pi*sin(phi)**2 * cos(phi) * k2*l*r**3
    u04 += 1584*l*(k2*r2*cos(phi)**2 - 3/4*k2*r2 + 4)*pi*r*sin(phi)
    u04 += 3168*pi*cos(phi)*l*r
    u04 += 27*phi*(k2*r2 - 8)**2
    
    u04 *= 1 / (3168*pi)
    return u04
    
def eval_reg_f(k, R, r, th):
    l = 1 / get_L(R)
    phi = th - pi / 6
    k2 = k**2
    r2 = r**2
    
    f = k**4*r**3*pi*sqrt(3)*sin(2*phi)
    f += -1/4*pi*sqrt(3)*sin(4*phi)*k**4*r**3
    f += -9*pi*sin(phi)*l*r2*k2*sqrt(3)
    f += 72*pi*sin(phi)**3*l
    f += -36*pi*cos(phi)*l*(k2*r2 + 2)*sin(phi)**2 
    f += 36*pi*l*((k2*r2 + 2)*cos(phi)**2 - 3/4*k2*r2 - 2)*sin(phi)
    f += 27*k**4*phi*r**3/44
    f += -72*pi*cos(phi)**3*l 
    f += 72*pi*cos(phi)*l

    f *= - k2*r/(72*pi)
    return f
    
    
class RegF:

    def eval_f_polar(self, r, th):
        return eval_reg_f(self.k, self.R, r, th)
    
    def eval_d_f_r(self, r, th):
        k = self.k
        l = 1 / get_L(self.R)
        return -k**2*r*(81*k**4*r**2*(th - pi/6)/44 + 0.75*sqrt(3)*pi*k**4*r**2*sin(4*th + pi/3) - 3*sqrt(3)*pi*k**4*r**2*cos(2*th + pi/6) - 72*pi*k**2*l*r*sin(th + pi/3)*cos(th + pi/3)**2 + 18*sqrt(3)*pi*k**2*l*r*cos(th + pi/3) - 36*pi*l*(2*k**2*r*sin(th + pi/3)**2 - 1.5*k**2*r)*cos(th + pi/3))/(72*pi) - k**2*(27*k**4*r**3*(th - pi/6)/44 + 0.25*sqrt(3)*pi*k**4*r**3*sin(4*th + pi/3) - sqrt(3)*pi*k**4*r**3*cos(2*th + pi/6) + 9*sqrt(3)*pi*k**2*l*r**2*cos(th + pi/3) - 36*pi*l*(k**2*r**2 + 2)*sin(th + pi/3)*cos(th + pi/3)**2 - 36*pi*l*(-0.75*k**2*r**2 + (k**2*r**2 + 2)*sin(th + pi/3)**2 - 2)*cos(th + pi/3) - 72*pi*l*sin(th + pi/3)**3 + 72*pi*l*sin(th + pi/3) - 72*pi*l*cos(th + pi/3)**3)/(72*pi)

    def eval_d2_f_r(self, r, th):
        k = self.k
        l = 1 / get_L(self.R)
        return -k**4*r*(54*k**2*r*(6*th - pi) + 132.0*sqrt(3)*pi*k**2*r*sin(4*th + pi/3) - 528*sqrt(3)*pi*k**2*r*cos(2*th + pi/6) - 4752*pi*l*(2*sin(th + pi/3)**2 - 1.5)*cos(th + pi/3) - 9504*pi*l*sin(th + pi/3)*cos(th + pi/3)**2 + 2376*sqrt(3)*pi*l*cos(th + pi/3))/(3168*pi)

    def eval_d_f_th(self, r, th):
        k = self.k
        l = 1 / get_L(self.R)
        return -k**2*r*(2*sqrt(3)*pi*k**4*r**3*sin(2*th + pi/6) + 1.0*sqrt(3)*pi*k**4*r**3*cos(4*th + pi/3) + 27*k**4*r**3/44 - 9*sqrt(3)*pi*k**2*l*r**2*sin(th + pi/3) + 72*pi*l*(k**2*r**2 + 2)*sin(th + pi/3)**2*cos(th + pi/3) - 72*pi*l*(k**2*r**2 + 2)*sin(th + pi/3)*cos(th + pi/3)**2 - 36*pi*l*(k**2*r**2 + 2)*cos(th + pi/3)**3 + 36*pi*l*(-0.75*k**2*r**2 + (k**2*r**2 + 2)*sin(th + pi/3)**2 - 2)*sin(th + pi/3) - 216*pi*l*sin(th + pi/3)**2*cos(th + pi/3) + 216*pi*l*sin(th + pi/3)*cos(th + pi/3)**2 + 72*pi*l*cos(th + pi/3))/(72*pi)

    def eval_d2_f_th(self, r, th):
        k = self.k
        l = 1 / get_L(self.R)
        return k**2*r*(4.0*sqrt(3)*k**4*r**3*sin(4*th + pi/3) - 4*sqrt(3)*k**4*r**3*cos(2*th + pi/6) + 9*sqrt(3)*k**2*l*r**2*cos(th + pi/3) + 72*l*(k**2*r**2 + 2)*sin(th + pi/3)**3 - 216*l*(k**2*r**2 + 2)*sin(th + pi/3)**2*cos(th + pi/3) - 252*l*(k**2*r**2 + 2)*sin(th + pi/3)*cos(th + pi/3)**2 + 72*l*(k**2*r**2 + 2)*cos(th + pi/3)**3 + 36*l*(0.75*k**2*r**2 - (k**2*r**2 + 2)*sin(th + pi/3)**2 + 2)*cos(th + pi/3) - 216*l*sin(th + pi/3)**3 + 432*l*sin(th + pi/3)**2*cos(th + pi/3) + 432*l*sin(th + pi/3)*cos(th + pi/3)**2 + 72*l*sin(th + pi/3) - 216*l*cos(th + pi/3)**3)/72

    def eval_d2_f_r_th(self, r, th):
        k = self.k
        l = 1 / get_L(self.R)
        return -k**2*(88*sqrt(3)*pi*k**4*r**3*sin(2*th + pi/6) + 44.0*sqrt(3)*pi*k**4*r**3*cos(4*th + pi/3) + 27*k**4*r**3 - 396*sqrt(3)*pi*k**2*l*r**2*sin(th + pi/3) + k**2*r**2*(264*sqrt(3)*pi*k**2*r*sin(2*th + pi/6) + 132.0*sqrt(3)*pi*k**2*r*cos(4*th + pi/3) + 81*k**2*r + 1584*pi*l*(2*sin(th + pi/3)**2 - 1.5)*sin(th + pi/3) + 6336*pi*l*sin(th + pi/3)**2*cos(th + pi/3) - 6336*pi*l*sin(th + pi/3)*cos(th + pi/3)**2 - 792*sqrt(3)*pi*l*sin(th + pi/3) - 3168*pi*l*cos(th + pi/3)**3) + 3168*pi*l*(k**2*r**2 + 2)*sin(th + pi/3)**2*cos(th + pi/3) - 3168*pi*l*(k**2*r**2 + 2)*sin(th + pi/3)*cos(th + pi/3)**2 - 1584*pi*l*(k**2*r**2 + 2)*cos(th + pi/3)**3 - 1584*pi*l*(0.75*k**2*r**2 - (k**2*r**2 + 2)*sin(th + pi/3)**2 + 2)*sin(th + pi/3) - 9504*pi*l*sin(th + pi/3)**2*cos(th + pi/3) + 9504*pi*l*sin(th + pi/3)*cos(th + pi/3)**2 + 3168*pi*l*cos(th + pi/3))/(3168*pi)

    def eval_grad_f(self, x, y):
        k = self.k
        l = 1 / get_L(self.R)
        return np.array((-k**2*x*(27*k**4*(x**2 + y**2)**(3/2)*(atan2(y, x) - pi/6)/44 + 0.25*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*sin(4*atan2(y, x) + pi/3) - sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*cos(2*atan2(y, x) + pi/6) + 9*sqrt(3)*pi*k**2*l*(x**2 + y**2)*cos(atan2(y, x) + pi/3) - 36*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 - 36*pi*l*(-0.75*k**2*(x**2 + y**2) + (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 - 2)*cos(atan2(y, x) + pi/3) - 72*pi*l*sin(atan2(y, x) + pi/3)**3 + 72*pi*l*sin(atan2(y, x) + pi/3) - 72*pi*l*cos(atan2(y, x) + pi/3)**3)/(72*pi*sqrt(x**2 + y**2)) - k**2*sqrt(x**2 + y**2)*(81*k**4*x*sqrt(x**2 + y**2)*(atan2(y, x) - pi/6)/44 + 0.75*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 3*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 2*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) - 1.0*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) - 27*k**4*y*sqrt(x**2 + y**2)/44 - 72*pi*k**2*l*x*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 18*sqrt(3)*pi*k**2*l*x*cos(atan2(y, x) + pi/3) + 9*sqrt(3)*pi*k**2*l*y*sin(atan2(y, x) + pi/3) - 72*pi*l*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 36*pi*l*y*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 36*pi*l*y*(-0.75*k**2*(x**2 + y**2) + (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 - 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 216*pi*l*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 216*pi*l*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) - 72*pi*l*y*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 36*pi*l*(2*k**2*x*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2*x - 2*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*cos(atan2(y, x) + pi/3))/(72*pi), -k**2*y*(27*k**4*(x**2 + y**2)**(3/2)*(atan2(y, x) - pi/6)/44 + 0.25*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*sin(4*atan2(y, x) + pi/3) - sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*cos(2*atan2(y, x) + pi/6) + 9*sqrt(3)*pi*k**2*l*(x**2 + y**2)*cos(atan2(y, x) + pi/3) - 36*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 - 36*pi*l*(-0.75*k**2*(x**2 + y**2) + (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 - 2)*cos(atan2(y, x) + pi/3) - 72*pi*l*sin(atan2(y, x) + pi/3)**3 + 72*pi*l*sin(atan2(y, x) + pi/3) - 72*pi*l*cos(atan2(y, x) + pi/3)**3)/(72*pi*sqrt(x**2 + y**2)) - k**2*sqrt(x**2 + y**2)*(2*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) + 1.0*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) + 27*k**4*x*sqrt(x**2 + y**2)/44 + 81*k**4*y*sqrt(x**2 + y**2)*(atan2(y, x) - pi/6)/44 + 0.75*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 3*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 9*sqrt(3)*pi*k**2*l*x*sin(atan2(y, x) + pi/3) - 72*pi*k**2*l*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 18*sqrt(3)*pi*k**2*l*y*cos(atan2(y, x) + pi/3) + 72*pi*l*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 36*pi*l*x*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) + 36*pi*l*x*(-0.75*k**2*(x**2 + y**2) + (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 - 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 216*pi*l*x*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 216*pi*l*x*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) + 72*pi*l*x*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 36*pi*l*(2*k**2*y*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2*y + 2*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*cos(atan2(y, x) + pi/3))/(72*pi)))

    def eval_hessian_f(self, x, y):
        k = self.k
        l = 1 / get_L(self.R)
        return np.array(((k**2*(x**2*(9*k**4*(x**2 + y**2)**(3/2)*(6*atan2(y, x) - pi) + 22.0*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*sin(4*atan2(y, x) + pi/3) - 88*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*cos(2*atan2(y, x) + pi/6) + 792*sqrt(3)*pi*k**2*l*(x**2 + y**2)*cos(atan2(y, x) + pi/3) - 3168*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 3168*pi*l*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3) - 6336*pi*l*sin(atan2(y, x) + pi/3)**3 + 6336*pi*l*sin(atan2(y, x) + pi/3) - 6336*pi*l*cos(atan2(y, x) + pi/3)**3)/(x**2 + y**2)**(3/2) - 2*x*(27*k**4*x*sqrt(x**2 + y**2)*(6*atan2(y, x) - pi) + 66.0*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 264*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 176*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) - 88.0*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) - 54*k**4*y*sqrt(x**2 + y**2) - 6336*pi*k**2*l*x*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 1584*sqrt(3)*pi*k**2*l*x*cos(atan2(y, x) + pi/3) + 792*sqrt(3)*pi*k**2*l*y*sin(atan2(y, x) + pi/3) - 6336*pi*l*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 3168*pi*l*y*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) + 3168*pi*l*y*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 19008*pi*l*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 19008*pi*l*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) - 6336*pi*l*y*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 3168*pi*l*(-2*k**2*x*sin(atan2(y, x) + pi/3)**2 + 1.5*k**2*x + 2*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*cos(atan2(y, x) + pi/3))/sqrt(x**2 + y**2) + sqrt(x**2 + y**2)*(-27*k**4*x**2*(6*atan2(y, x) - pi)/sqrt(x**2 + y**2) - 66.0*sqrt(3)*pi*k**4*x**2*sin(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) + 264*sqrt(3)*pi*k**4*x**2*cos(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) + 704*sqrt(3)*pi*k**4*x*y*sin(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) + 352.0*sqrt(3)*pi*k**4*x*y*cos(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) + 216*k**4*x*y/sqrt(x**2 + y**2) + 352.0*sqrt(3)*pi*k**4*y**2*sin(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) - 352*sqrt(3)*pi*k**4*y**2*cos(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) - 27*k**4*sqrt(x**2 + y**2)*(6*atan2(y, x) - pi) - 66.0*sqrt(3)*pi*k**4*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) + 264*sqrt(3)*pi*k**4*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) + 25344*pi*k**2*l*x*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 1584*sqrt(3)*pi*k**2*l*x*y*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 12672*pi*k**2*l*x*y*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) + 792*sqrt(3)*pi*k**2*l*y**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 6336*pi*k**2*l*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 - 1584*sqrt(3)*pi*k**2*l*cos(atan2(y, x) + pi/3) - 12672*pi*l*x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 6336*pi*l*x*y*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 6336*pi*l*x*y*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 38016*pi*l*x*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 38016*pi*l*x*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 12672*pi*l*x*y*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 6336*pi*l*y**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 - 22176*pi*l*y**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 + 3168*pi*l*y**2*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 19008*pi*l*y**2*sin(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 38016*pi*l*y**2*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 38016*pi*l*y**2*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 + 6336*pi*l*y**2*sin(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 19008*pi*l*y**2*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 - 6336*pi*l*y*(-2*k**2*x*sin(atan2(y, x) + pi/3)**2 + 1.5*k**2*x + 2*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*(8*k**2*x*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 2*k**2*sin(atan2(y, x) + pi/3)**2 + 1.5*k**2 - 4*x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 2*y**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 2*y**2*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2)*cos(atan2(y, x) + pi/3)) - (9*k**4*(x**2 + y**2)**(3/2)*(6*atan2(y, x) - pi) + 22.0*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*sin(4*atan2(y, x) + pi/3) - 88*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*cos(2*atan2(y, x) + pi/6) + 792*sqrt(3)*pi*k**2*l*(x**2 + y**2)*cos(atan2(y, x) + pi/3) - 3168*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 3168*pi*l*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3) - 6336*pi*l*sin(atan2(y, x) + pi/3)**3 + 6336*pi*l*sin(atan2(y, x) + pi/3) - 6336*pi*l*cos(atan2(y, x) + pi/3)**3)/sqrt(x**2 + y**2))/(6336*pi), k**2*(x*y*(9*k**4*(x**2 + y**2)**(3/2)*(6*atan2(y, x) - pi) + 22.0*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*sin(4*atan2(y, x) + pi/3) - 88*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*cos(2*atan2(y, x) + pi/6) + 792*sqrt(3)*pi*k**2*l*(x**2 + y**2)*cos(atan2(y, x) + pi/3) - 3168*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 3168*pi*l*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3) - 6336*pi*l*sin(atan2(y, x) + pi/3)**3 + 6336*pi*l*sin(atan2(y, x) + pi/3) - 6336*pi*l*cos(atan2(y, x) + pi/3)**3)/(x**2 + y**2)**(3/2) - x*(176*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) + 88.0*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) + 54*k**4*x*sqrt(x**2 + y**2) + 27*k**4*y*sqrt(x**2 + y**2)*(6*atan2(y, x) - pi) + 66.0*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 264*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 792*sqrt(3)*pi*k**2*l*x*sin(atan2(y, x) + pi/3) - 6336*pi*k**2*l*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 1584*sqrt(3)*pi*k**2*l*y*cos(atan2(y, x) + pi/3) + 6336*pi*l*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*x*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 3168*pi*l*x*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 19008*pi*l*x*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 19008*pi*l*x*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) + 6336*pi*l*x*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*(2*k**2*y*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2*y + 2*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*cos(atan2(y, x) + pi/3))/sqrt(x**2 + y**2) - y*(27*k**4*x*sqrt(x**2 + y**2)*(6*atan2(y, x) - pi) + 66.0*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 264*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 176*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) - 88.0*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) - 54*k**4*y*sqrt(x**2 + y**2) - 6336*pi*k**2*l*x*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 1584*sqrt(3)*pi*k**2*l*x*cos(atan2(y, x) + pi/3) + 792*sqrt(3)*pi*k**2*l*y*sin(atan2(y, x) + pi/3) - 6336*pi*l*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 3168*pi*l*y*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) + 3168*pi*l*y*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 19008*pi*l*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 19008*pi*l*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) - 6336*pi*l*y*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 3168*pi*l*(-2*k**2*x*sin(atan2(y, x) + pi/3)**2 + 1.5*k**2*x + 2*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*cos(atan2(y, x) + pi/3))/sqrt(x**2 + y**2) + sqrt(x**2 + y**2)*(-528*sqrt(3)*pi*k**4*x**2*sin(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) - 264.0*sqrt(3)*pi*k**4*x**2*cos(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) - 162*k**4*x**2/sqrt(x**2 + y**2) - 27*k**4*x*y*(6*atan2(y, x) - pi)/sqrt(x**2 + y**2) - 418.0*sqrt(3)*pi*k**4*x*y*sin(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) + 616*sqrt(3)*pi*k**4*x*y*cos(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) + 176*sqrt(3)*pi*k**4*y**2*sin(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) + 88.0*sqrt(3)*pi*k**4*y**2*cos(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) + 54*k**4*y**2/sqrt(x**2 + y**2) + 176*sqrt(3)*pi*k**4*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) + 88.0*sqrt(3)*pi*k**4*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) + 54*k**4*sqrt(x**2 + y**2) - 12672*pi*k**2*l*x**2*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 1584*sqrt(3)*pi*k**2*l*x**2*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 6336*pi*k**2*l*x**2*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 792*sqrt(3)*pi*k**2*l*x*y*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 12672*pi*k**2*l*y**2*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 6336*pi*k**2*l*y**2*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 792*sqrt(3)*pi*k**2*l*sin(atan2(y, x) + pi/3) - 6336*pi*l*x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 22176*pi*l*x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 3168*pi*l*x*y*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 19008*pi*l*x*y*sin(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 - 38016*pi*l*x*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 38016*pi*l*x*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 6336*pi*l*x*y*sin(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 19008*pi*l*x*y*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 3168*pi*l*x*(-2*k**2*x*sin(atan2(y, x) + pi/3)**2 + 1.5*k**2*x + 2*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 12672*pi*l*y**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 6336*pi*l*y**2*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 6336*pi*l*y**2*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 38016*pi*l*y**2*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 38016*pi*l*y**2*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 12672*pi*l*y**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 3168*pi*l*y*(2*k**2*y*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2*y + 2*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 6336*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 3168*pi*l*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 6336*pi*l*(2*k**2*x**2*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3) - 2*k**2*y**2*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3) + x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2/(x**2 + y**2) - x*y*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) + 2*y**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3))*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 19008*pi*l*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 19008*pi*l*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) + 6336*pi*l*cos(atan2(y, x) + pi/3)/(x**2 + y**2)))/(6336*pi)), (k**2*(x*y*(9*k**4*(x**2 + y**2)**(3/2)*(6*atan2(y, x) - pi) + 22.0*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*sin(4*atan2(y, x) + pi/3) - 88*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*cos(2*atan2(y, x) + pi/6) + 792*sqrt(3)*pi*k**2*l*(x**2 + y**2)*cos(atan2(y, x) + pi/3) - 3168*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 3168*pi*l*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3) - 6336*pi*l*sin(atan2(y, x) + pi/3)**3 + 6336*pi*l*sin(atan2(y, x) + pi/3) - 6336*pi*l*cos(atan2(y, x) + pi/3)**3)/(x**2 + y**2)**(3/2) - x*(176*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) + 88.0*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) + 54*k**4*x*sqrt(x**2 + y**2) + 27*k**4*y*sqrt(x**2 + y**2)*(6*atan2(y, x) - pi) + 66.0*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 264*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 792*sqrt(3)*pi*k**2*l*x*sin(atan2(y, x) + pi/3) - 6336*pi*k**2*l*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 1584*sqrt(3)*pi*k**2*l*y*cos(atan2(y, x) + pi/3) + 6336*pi*l*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*x*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 3168*pi*l*x*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 19008*pi*l*x*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 19008*pi*l*x*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) + 6336*pi*l*x*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*(2*k**2*y*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2*y + 2*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*cos(atan2(y, x) + pi/3))/sqrt(x**2 + y**2) - y*(27*k**4*x*sqrt(x**2 + y**2)*(6*atan2(y, x) - pi) + 66.0*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 264*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 176*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) - 88.0*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) - 54*k**4*y*sqrt(x**2 + y**2) - 6336*pi*k**2*l*x*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 1584*sqrt(3)*pi*k**2*l*x*cos(atan2(y, x) + pi/3) + 792*sqrt(3)*pi*k**2*l*y*sin(atan2(y, x) + pi/3) - 6336*pi*l*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 3168*pi*l*y*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) + 3168*pi*l*y*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 19008*pi*l*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 19008*pi*l*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) - 6336*pi*l*y*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 3168*pi*l*(-2*k**2*x*sin(atan2(y, x) + pi/3)**2 + 1.5*k**2*x + 2*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*cos(atan2(y, x) + pi/3))/sqrt(x**2 + y**2) - sqrt(x**2 + y**2)*(176*sqrt(3)*pi*k**4*x**2*sin(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) + 88.0*sqrt(3)*pi*k**4*x**2*cos(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) + 54*k**4*x**2/sqrt(x**2 + y**2) + 27*k**4*x*y*(6*atan2(y, x) - pi)/sqrt(x**2 + y**2) + 418.0*sqrt(3)*pi*k**4*x*y*sin(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) - 616*sqrt(3)*pi*k**4*x*y*cos(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) - 528*sqrt(3)*pi*k**4*y**2*sin(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) - 264.0*sqrt(3)*pi*k**4*y**2*cos(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) - 162*k**4*y**2/sqrt(x**2 + y**2) + 176*sqrt(3)*pi*k**4*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) + 88.0*sqrt(3)*pi*k**4*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) + 54*k**4*sqrt(x**2 + y**2) + 12672*pi*k**2*l*x**2*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 6336*pi*k**2*l*x**2*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) + 792*sqrt(3)*pi*k**2*l*x*y*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 12672*pi*k**2*l*y**2*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 1584*sqrt(3)*pi*k**2*l*y**2*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 6336*pi*k**2*l*y**2*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 792*sqrt(3)*pi*k**2*l*sin(atan2(y, x) + pi/3) - 12672*pi*l*x**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 6336*pi*l*x**2*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 6336*pi*l*x**2*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 38016*pi*l*x**2*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 38016*pi*l*x**2*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 12672*pi*l*x**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 6336*pi*l*x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 - 22176*pi*l*x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 + 3168*pi*l*x*y*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 19008*pi*l*x*y*sin(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 38016*pi*l*x*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 38016*pi*l*x*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 + 6336*pi*l*x*y*sin(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 19008*pi*l*x*y*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 - 3168*pi*l*x*(-2*k**2*x*sin(atan2(y, x) + pi/3)**2 + 1.5*k**2*x + 2*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*y*(2*k**2*y*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2*y + 2*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*sin(atan2(y, x) + pi/3)/(x**2 + y**2) + 6336*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 3168*pi*l*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 6336*pi*l*(2*k**2*x**2*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3) - 2*k**2*y**2*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3) - 2*x**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2/(x**2 + y**2) - x*y*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) + (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3))*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 19008*pi*l*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 19008*pi*l*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) + 6336*pi*l*cos(atan2(y, x) + pi/3)/(x**2 + y**2)))/(6336*pi), k**2*(y**2*(9*k**4*(x**2 + y**2)**(3/2)*(6*atan2(y, x) - pi) + 22.0*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*sin(4*atan2(y, x) + pi/3) - 88*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*cos(2*atan2(y, x) + pi/6) + 792*sqrt(3)*pi*k**2*l*(x**2 + y**2)*cos(atan2(y, x) + pi/3) - 3168*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 3168*pi*l*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3) - 6336*pi*l*sin(atan2(y, x) + pi/3)**3 + 6336*pi*l*sin(atan2(y, x) + pi/3) - 6336*pi*l*cos(atan2(y, x) + pi/3)**3)/(x**2 + y**2)**(3/2) - 2*y*(176*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*sin(2*atan2(y, x) + pi/6) + 88.0*sqrt(3)*pi*k**4*x*sqrt(x**2 + y**2)*cos(4*atan2(y, x) + pi/3) + 54*k**4*x*sqrt(x**2 + y**2) + 27*k**4*y*sqrt(x**2 + y**2)*(6*atan2(y, x) - pi) + 66.0*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 264*sqrt(3)*pi*k**4*y*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 792*sqrt(3)*pi*k**2*l*x*sin(atan2(y, x) + pi/3) - 6336*pi*k**2*l*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 1584*sqrt(3)*pi*k**2*l*y*cos(atan2(y, x) + pi/3) + 6336*pi*l*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*x*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 3168*pi*l*x*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 19008*pi*l*x*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 19008*pi*l*x*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2) + 6336*pi*l*x*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*(2*k**2*y*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2*y + 2*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*cos(atan2(y, x) + pi/3))/sqrt(x**2 + y**2) - sqrt(x**2 + y**2)*(-352.0*sqrt(3)*pi*k**4*x**2*sin(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) + 352*sqrt(3)*pi*k**4*x**2*cos(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) + 704*sqrt(3)*pi*k**4*x*y*sin(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) + 352.0*sqrt(3)*pi*k**4*x*y*cos(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) + 216*k**4*x*y/sqrt(x**2 + y**2) + 27*k**4*y**2*(6*atan2(y, x) - pi)/sqrt(x**2 + y**2) + 66.0*sqrt(3)*pi*k**4*y**2*sin(4*atan2(y, x) + pi/3)/sqrt(x**2 + y**2) - 264*sqrt(3)*pi*k**4*y**2*cos(2*atan2(y, x) + pi/6)/sqrt(x**2 + y**2) + 27*k**4*sqrt(x**2 + y**2)*(6*atan2(y, x) - pi) + 66.0*sqrt(3)*pi*k**4*sqrt(x**2 + y**2)*sin(4*atan2(y, x) + pi/3) - 264*sqrt(3)*pi*k**4*sqrt(x**2 + y**2)*cos(2*atan2(y, x) + pi/6) - 792*sqrt(3)*pi*k**2*l*x**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 25344*pi*k**2*l*x*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2) - 1584*sqrt(3)*pi*k**2*l*x*y*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 12672*pi*k**2*l*x*y*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2) - 6336*pi*k**2*l*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 1584*sqrt(3)*pi*k**2*l*cos(atan2(y, x) + pi/3) - 6336*pi*l*x**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 22176*pi*l*x**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 3168*pi*l*x**2*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 19008*pi*l*x**2*sin(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 - 38016*pi*l*x**2*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 38016*pi*l*x**2*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 6336*pi*l*x**2*sin(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 19008*pi*l*x**2*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 - 12672*pi*l*x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 6336*pi*l*x*y*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**3/(x**2 + y**2)**2 + 6336*pi*l*x*y*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*sin(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 38016*pi*l*x*y*sin(atan2(y, x) + pi/3)**2*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 - 38016*pi*l*x*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 12672*pi*l*x*y*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2 + 6336*pi*l*x*(2*k**2*y*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2*y + 2*x*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2))*sin(atan2(y, x) + pi/3)/(x**2 + y**2) - 3168*pi*l*(8*k**2*x*y*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2) + 2*k**2*sin(atan2(y, x) + pi/3)**2 - 1.5*k**2 - 2*x**2*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 + 2*x**2*(k**2*(x**2 + y**2) + 2)*cos(atan2(y, x) + pi/3)**2/(x**2 + y**2)**2 - 4*x*y*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)/(x**2 + y**2)**2)*cos(atan2(y, x) + pi/3)) - (9*k**4*(x**2 + y**2)**(3/2)*(6*atan2(y, x) - pi) + 22.0*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*sin(4*atan2(y, x) + pi/3) - 88*sqrt(3)*pi*k**4*(x**2 + y**2)**(3/2)*cos(2*atan2(y, x) + pi/6) + 792*sqrt(3)*pi*k**2*l*(x**2 + y**2)*cos(atan2(y, x) + pi/3) - 3168*pi*l*(k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)*cos(atan2(y, x) + pi/3)**2 + 3168*pi*l*(0.75*k**2*(x**2 + y**2) - (k**2*(x**2 + y**2) + 2)*sin(atan2(y, x) + pi/3)**2 + 2)*cos(atan2(y, x) + pi/3) - 6336*pi*l*sin(atan2(y, x) + pi/3)**3 + 6336*pi*l*sin(atan2(y, x) + pi/3) - 6336*pi*l*cos(atan2(y, x) + pi/3)**3)/sqrt(x**2 + y**2))/(6336*pi))))
          
    
class JumpReg(Pizza, RegF, Problem):
    k = 1

    expected_known = False
        
    def eval_bc(self, x, y):
        r, th = cart_to_polar(x, y)
        sid = Pizza.get_sid(th)
        return self.eval_bc_extended(x, y, sid)
        
    def eval_bc_extended(self, x, y, sid):
        r, th = cart_to_polar(x, y)
        
        bc_nc = eval_bc_extended(self.R, r, th, sid)
        u04 = eval_u04(self.k, self.R, r, th)
        
        return bc_nc - u04

